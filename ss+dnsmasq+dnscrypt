#!/bin/bash

ssh "$*" /opt/etc/toggle_proxy.sh disable

self="$(cat deploy_start.sh)" && eval "$self"

# self="$(cat ~/Project/deployment_bash/deploy_start.sh)" && eval "$self"

export target=$1

if [ ! -e ./router/opt/etc/shadowsocks.json ];then
    echo '请首先定义 router/opt/etc/shadowsocks.json'
    exit
fi

#copy router/opt/etc/dnscrypt-proxy.sh /opt/etc
copy router/opt/etc/dnsmasq.d/foreign_domains.conf /opt/etc/dnsmasq.d/foreign_domains.conf
copy router/opt/etc/iptables.sh /opt/etc
copy router/opt/etc/toggle_proxy.sh /opt/etc
copy router/opt/etc/switch_proxy.sh /opt/etc
copy router/opt/etc/patch_router /opt/etc
copy router/opt/etc/restart_dnsmasq /opt/bin/
copy router/opt/etc/localips /opt/etc
copy router/opt/etc/update_ip_whitelist /opt/etc
copy router/opt/etc/update_dns_whitelist /opt/etc
copy router/opt/etc/init.d/S22shadowsocksr /opt/etc/init.d/


copy router/opt/etc/dnscrypt-proxy.toml /opt/etc/dnscrypt-proxy.toml
copy router/opt/etc/init.d/S09dnscrypt-proxy /opt/etc/init.d/
copy router/opt/sbin/dnscrypt-proxy /opt/sbin/dnscrypt-proxy


copy router/opt/etc/shadowsocks.* /opt/etc
[ -e router/opt/etc/user_ip_whitelist.txt ] && copy router/opt/etc/user_ip_whitelist.txt /opt/etc
[ -e router/opt/etc/user_domain_name_whitelist.txt ] && copy router/opt/etc/user_domain_name_whitelist.txt /opt/etc
[ -e router/opt/etc/user_domain_name_blocklist.txt ] && copy router/opt/etc/user_domain_name_blocklist.txt /opt/etc
[ -e router/opt/etc/user_domain_name_gfwlist.txt ] && copy router/opt/etc/user_domain_name_gfwlist.txt /opt/etc


deploy_start

# dnsmasq
dnsmasq_dir=/opt/etc/dnsmasq.d
if ! grep -qs "^conf-dir=$dnsmasq_dir/,\*\.conf$" /etc/dnsmasq.conf; then
    echo "conf-dir=$dnsmasq_dir/,*.conf" >> /etc/dnsmasq.conf
fi

sed -i 's/log-facility=\/var\/log\/dnsmasq.log/log-facility=\/opt\/var\/log\/dnsmasq.log/g' /etc/dnsmasq.conf

# dnscrypt
chmod +x /opt/etc/init.d/S09dnscrypt-proxy


/opt/etc/init.d/S09dnscrypt-proxy restart
/opt/bin/restart_dnsmasq
# ----------------------------------------------------
#
# 下面的脚本会在远程路由器之上执行, 请根据所需，酌情修改。
#
# ---------------------------------------------------

# 如果第一次运行本脚本, 请务必初始化 entware 包管理系统.
# ssh 登陆路由器, 执行 entware-setup.sh, 选择 1'

if ! opkg update; then
    echo "Run \`opkg update' failed."
    echo "Run \`entware-setup.sh' to initalize entware-ng!"
    exit
else
    opkg upgrade
fi

# 如果不存在 ipset (例如 AC66U), 首先安装 ipset4
which ipset &>/dev/null || opkg install ipset4

# 添加 AC87U 的 ipset protocal version 6 的 iptables/ipset 支持.
ipset_protocal_version=$(ipset -v |grep -o 'version.*[0-9]' |head -n1 |cut -d' ' -f2)

set -e

opkg install libc libssp libev libmbedtls libpcre libpthread libsodium haveged zlib libopenssl ca-bundle shadowsocksr-libev

opkg install bind-dig

if [ "$ipset_protocal_version" == 6 ]; then
    # AC87U 无需安装新版的 iptables/ipset
    echo 'skip install iptables command'
else
    # AC66U, 需要额外安装新版的 iptables
    opkg install iptables
fi

# ----------------------------------------------------
#
# 下面执行一些脚本检查与替换。
#
# ---------------------------------------------------

# 确保 shadowsocks.json 中的 local_address 替换为路由器 ip 地址。
replace_regex '"local_address".*' '"local_address":'" \"$targetip\"," /opt/etc/shadowsocks.json

# 将 dnscrypt 作为 dnsmasq 的上游 DNS 服务器
replace_regex 'server=/#/.*' 'server=/#/127.0.0.1#65053' /opt/etc/dnsmasq.d/foreign_domains.conf
#

# ----------------------------------------------------
#
# 启动所需的脚本
#
# ---------------------------------------------------

# 每隔 1 分钟检测下所有的服务是否运行.
add_service wan-start 'cru a run-services "*/5 * * * *" "/jffs/scripts/services-start"'
# 每隔 3 分钟检测下 iptables 是否失效.
add_service wan-start 'cru a run-iptables "*/5 * * * *" "/opt/etc/iptables.sh"'

# 星期一的 3:25 分升级 IP 白名单.
chmod +x /opt/etc/update_ip_whitelist && /opt/etc/update_ip_whitelist
add_service wan-start 'cru a update_ip_whitelist "25 3 * * 2" "/opt/etc/update_ip_whitelist"'

# 星期一的 4:25 分升级域名白名单.
chmod +x /opt/etc/update_dns_whitelist && /opt/etc/update_dns_whitelist
add_service wan-start 'cru a update_dns_whitelist "25 4 * * 2" "/opt/etc/update_dns_whitelist"'

set +e
/jffs/scripts/services-stop
set -e
/jffs/scripts/services-start

# 在所有服务启动之后, 运行 /opt/etc/patch_router 为 dnsmasq 追加配置, 并重启 dnsmasq 服务.
add_service services-start '
if [ ! -f /tmp/patch_router_is_run ];then
    /opt/etc/patch_router && touch /tmp/patch_router_is_run
fi
'

chmod +x /opt/etc/patch_router && /opt/etc/patch_router

if [ ! -f /tmp/patch_router_is_run ];then
    /opt/etc/patch_router && touch /tmp/patch_router_is_run
fi

echo '如果无法翻墙, 按照下列步骤查错：'
echo '1. 断掉已连接的 WiFi，并重新连接，看看是否可以翻墙。'
echo '2. 保持 U 盘，待重启路由器完成后，等待片刻，看看是否可以翻墙。'
echo
echo '升级部署:'
echo "$0 admin@router.asus.com"
echo
echo '无法连接路由器：'
echo '1. 拔下 U 盘，重启，尝试重新连接路由器。'
echo '2. 进入管理界面，选择格式化 jffs，插入 U 盘，并重启。'
echo
echo '暂时关闭代理：'
echo 'ssh admin@router.asus.com /opt/etc/toggle_proxy.sh'
echo '再次运行以上脚本重新开启。'
# reboot
